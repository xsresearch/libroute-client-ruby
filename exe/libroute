#!/usr/bin/env ruby

require 'libroute'
require 'bson'

  options = Libroute.parse(ARGV)

  if options.library.empty?
    puts "Error: No LIBRARY specified"
    exit 1
  end

  if !options.build.empty?
    puts "Building #{options.library} library..."
    Libroute.build(options)
    exit 0
  end

  # Populate params
  paramshash = Hash.new
  if !options.param.empty?
    options.param.each do |p|
      key,val = p.split("=",2)
      paramshash[key]=val
    end
  end

  # Populate files
  if !options.file.empty?
      options.file.each do |p|
      key,val = p.split("=",2)
      if val.eql?('-')
        fileval = $stdin.read
      else
        begin
          fileval = File.read(val)
        rescue
          fileval = nil
        end
      end
      if fileval.nil?
        puts "Failed to read file: #{val}"
        exit 1
      end
      paramshash[key] = BSON::Binary.new(fileval)
    end
  end

  result = Libroute.exec(options.library, paramshash)
  if !result['output'].nil?
    if result['output'].is_a?(String)
      puts result['output']
    else
      bb = result['output'].data
      puts bb.to_s
    end
  else
    result.each do |k,v|
      if v.length < 100
        puts k + ": " + v
      else
        puts k + ": #{v.length} bytes"
      end
    end
  end

